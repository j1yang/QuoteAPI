// <auto-generated />
using System;
using ASP_Web_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_Web_API.Migrations
{
    [DbContext(typeof(QuotesContext))]
    [Migration("20231209160716_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASP_Web_API.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 2,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 3,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 4,
                            QuoteId = 4
                        },
                        new
                        {
                            Id = 5,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 6,
                            QuoteId = 6
                        },
                        new
                        {
                            Id = 7,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 8,
                            QuoteId = 8
                        },
                        new
                        {
                            Id = 9,
                            QuoteId = 9
                        },
                        new
                        {
                            Id = 10,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 11,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 12,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 13,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 14,
                            QuoteId = 14
                        },
                        new
                        {
                            Id = 15,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 16,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 17,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 18,
                            QuoteId = 18
                        },
                        new
                        {
                            Id = 19,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 20,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 21,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 22,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 23,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 24,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 25,
                            QuoteId = 25
                        },
                        new
                        {
                            Id = 26,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 27,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 28,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 29,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 30,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 31,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 32,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 33,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 34,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 35,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 36,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 37,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 38,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 39,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 40,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 41,
                            QuoteId = 6
                        },
                        new
                        {
                            Id = 42,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 43,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 44,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 45,
                            QuoteId = 9
                        },
                        new
                        {
                            Id = 46,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 47,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 48,
                            QuoteId = 25
                        },
                        new
                        {
                            Id = 49,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 50,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 51,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 52,
                            QuoteId = 9
                        },
                        new
                        {
                            Id = 53,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 54,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 55,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 56,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 57,
                            QuoteId = 14
                        },
                        new
                        {
                            Id = 58,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 59,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 60,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 61,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 62,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 63,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 64,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 65,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 66,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 67,
                            QuoteId = 21
                        },
                        new
                        {
                            Id = 68,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 69,
                            QuoteId = 8
                        },
                        new
                        {
                            Id = 70,
                            QuoteId = 14
                        },
                        new
                        {
                            Id = 71,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 72,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 73,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 74,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 75,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 76,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 77,
                            QuoteId = 9
                        },
                        new
                        {
                            Id = 78,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 79,
                            QuoteId = 25
                        },
                        new
                        {
                            Id = 80,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 81,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 82,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 83,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 84,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 85,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 86,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 87,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 88,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 89,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 90,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 91,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 92,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 93,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 94,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 95,
                            QuoteId = 6
                        },
                        new
                        {
                            Id = 96,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 97,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 98,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 99,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 100,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 101,
                            QuoteId = 14
                        },
                        new
                        {
                            Id = 102,
                            QuoteId = 1
                        },
                        new
                        {
                            Id = 103,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 104,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 105,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 106,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 107,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 108,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 109,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 110,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 111,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 112,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 113,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 114,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 115,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 116,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 117,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 118,
                            QuoteId = 6
                        },
                        new
                        {
                            Id = 119,
                            QuoteId = 8
                        },
                        new
                        {
                            Id = 120,
                            QuoteId = 18
                        },
                        new
                        {
                            Id = 121,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 122,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 123,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 124,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 125,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 126,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 127,
                            QuoteId = 4
                        },
                        new
                        {
                            Id = 128,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 129,
                            QuoteId = 18
                        },
                        new
                        {
                            Id = 130,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 131,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 132,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 133,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 134,
                            QuoteId = 4
                        },
                        new
                        {
                            Id = 135,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 136,
                            QuoteId = 4
                        },
                        new
                        {
                            Id = 137,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 138,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 139,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 140,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 141,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 142,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 143,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 144,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 145,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 146,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 147,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 148,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 149,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 150,
                            QuoteId = 25
                        },
                        new
                        {
                            Id = 151,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 152,
                            QuoteId = 20
                        },
                        new
                        {
                            Id = 153,
                            QuoteId = 19
                        },
                        new
                        {
                            Id = 154,
                            QuoteId = 3
                        },
                        new
                        {
                            Id = 155,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 156,
                            QuoteId = 7
                        },
                        new
                        {
                            Id = 157,
                            QuoteId = 22
                        },
                        new
                        {
                            Id = 158,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 159,
                            QuoteId = 24
                        },
                        new
                        {
                            Id = 160,
                            QuoteId = 25
                        },
                        new
                        {
                            Id = 161,
                            QuoteId = 12
                        },
                        new
                        {
                            Id = 162,
                            QuoteId = 23
                        },
                        new
                        {
                            Id = 163,
                            QuoteId = 15
                        },
                        new
                        {
                            Id = 164,
                            QuoteId = 6
                        },
                        new
                        {
                            Id = 165,
                            QuoteId = 16
                        },
                        new
                        {
                            Id = 166,
                            QuoteId = 13
                        },
                        new
                        {
                            Id = 167,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 168,
                            QuoteId = 14
                        },
                        new
                        {
                            Id = 169,
                            QuoteId = 5
                        },
                        new
                        {
                            Id = 170,
                            QuoteId = 2
                        },
                        new
                        {
                            Id = 171,
                            QuoteId = 11
                        },
                        new
                        {
                            Id = 172,
                            QuoteId = 17
                        },
                        new
                        {
                            Id = 173,
                            QuoteId = 18
                        },
                        new
                        {
                            Id = 174,
                            QuoteId = 10
                        },
                        new
                        {
                            Id = 175,
                            QuoteId = 21
                        });
                });

            modelBuilder.Entity("ASP_Web_API.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Mahatma Gandhi",
                            Text = "You must be the change you wish to see in the world."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Mother Teresa",
                            Text = "Spread love everywhere you go. Let no one ever come to you without leaving happier."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Franklin D. Roosevelt",
                            Text = "The only thing we have to fear is fear itself."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Martin Luther King Jr.",
                            Text = "Darkness cannot drive out darkness: only light can do that. Hate cannot drive out hate: only love can do that."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Eleanor Roosevelt",
                            Text = "Do one thing every day that scares you."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Benjamin Franklin",
                            Text = "Well done is better than well said."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Helen Keller",
                            Text = "The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Aristotle",
                            Text = "It is during our darkest moments that we must focus to see the light."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Ralph Waldo Emerson",
                            Text = "Do not go where the path may lead, go instead where there is no path and leave a trail."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Oscar Wilde",
                            Text = "Be yourself; everyone else is already taken."
                        },
                        new
                        {
                            Id = 11,
                            Author = "Eleanor Roosevelt",
                            Text = "If life were predictable it would cease to be life and be without flavor."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Abraham Lincoln",
                            Text = "In the end, it's not the years in your life that count. It's the life in your years."
                        },
                        new
                        {
                            Id = 13,
                            Author = "Ralph Waldo Emerson",
                            Text = "Life is a succession of lessons which must be lived to be understood."
                        },
                        new
                        {
                            Id = 14,
                            Author = "Maya Angelou",
                            Text = "You will face many defeats in life, but never let yourself be defeated."
                        },
                        new
                        {
                            Id = 15,
                            Author = "Babe Ruth",
                            Text = "Never let the fear of striking out keep you from playing the game."
                        },
                        new
                        {
                            Id = 16,
                            Author = "Oscar Wilde",
                            Text = "Life is never fair, and perhaps it is a good thing for most of us that it is not."
                        },
                        new
                        {
                            Id = 17,
                            Author = "Tony Robbins",
                            Text = "The only impossible journey is the one you never begin."
                        },
                        new
                        {
                            Id = 18,
                            Author = "Mother Teresa",
                            Text = "In this life we cannot do great things. We can only do small things with great love."
                        },
                        new
                        {
                            Id = 19,
                            Author = "Albert Einstein",
                            Text = "Only a life lived for others is a life worthwhile."
                        },
                        new
                        {
                            Id = 20,
                            Author = "Dalai Lama",
                            Text = "The purpose of our lives is to be happy."
                        },
                        new
                        {
                            Id = 21,
                            Author = "John Lennon",
                            Text = "You may say I'm a dreamer, but I'm not the only one. I hope someday you'll join us. And the world will live as one."
                        },
                        new
                        {
                            Id = 22,
                            Author = "Mae West",
                            Text = "You only live once, but if you do it right, once is enough."
                        },
                        new
                        {
                            Id = 23,
                            Author = "Ralph Waldo Emerson",
                            Text = "To be yourself in a world that is constantly trying to make you something else is the greatest accomplishment."
                        },
                        new
                        {
                            Id = 24,
                            Author = "Abraham Lincoln",
                            Text = "Don't worry when you are not recognized, but strive to be worthy of recognition."
                        },
                        new
                        {
                            Id = 25,
                            Author = "Nelson Mandela",
                            Text = "The greatest glory in living lies not in never falling, but in rising every time we fall."
                        });
                });

            modelBuilder.Entity("ASP_Web_API.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leadership"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Motivational"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Life"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Attitude"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Wisdom"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Love"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Happiness"
                        });
                });

            modelBuilder.Entity("ASP_Web_API.Models.TagAssignment", b =>
                {
                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("QuoteId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("QuoteTags");

                    b.HasData(
                        new
                        {
                            QuoteId = 1,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 1,
                            TagId = 2
                        },
                        new
                        {
                            QuoteId = 1,
                            TagId = 3
                        },
                        new
                        {
                            QuoteId = 1,
                            TagId = 4
                        },
                        new
                        {
                            QuoteId = 1,
                            TagId = 5
                        },
                        new
                        {
                            QuoteId = 2,
                            TagId = 2
                        },
                        new
                        {
                            QuoteId = 3,
                            TagId = 3
                        },
                        new
                        {
                            QuoteId = 4,
                            TagId = 4
                        },
                        new
                        {
                            QuoteId = 5,
                            TagId = 5
                        },
                        new
                        {
                            QuoteId = 6,
                            TagId = 3
                        },
                        new
                        {
                            QuoteId = 7,
                            TagId = 3
                        },
                        new
                        {
                            QuoteId = 8,
                            TagId = 3
                        },
                        new
                        {
                            QuoteId = 9,
                            TagId = 5
                        },
                        new
                        {
                            QuoteId = 10,
                            TagId = 5
                        },
                        new
                        {
                            QuoteId = 11,
                            TagId = 5
                        },
                        new
                        {
                            QuoteId = 12,
                            TagId = 6
                        },
                        new
                        {
                            QuoteId = 13,
                            TagId = 6
                        },
                        new
                        {
                            QuoteId = 14,
                            TagId = 6
                        },
                        new
                        {
                            QuoteId = 15,
                            TagId = 7
                        },
                        new
                        {
                            QuoteId = 16,
                            TagId = 7
                        },
                        new
                        {
                            QuoteId = 17,
                            TagId = 7
                        },
                        new
                        {
                            QuoteId = 18,
                            TagId = 7
                        },
                        new
                        {
                            QuoteId = 19,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 20,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 21,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 22,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 23,
                            TagId = 1
                        },
                        new
                        {
                            QuoteId = 24,
                            TagId = 2
                        },
                        new
                        {
                            QuoteId = 25,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("ASP_Web_API.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "cdefbf5d-aae6-472f-9b5b-42cd0746dbc9",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ASP_Web_API.Models.Like", b =>
                {
                    b.HasOne("ASP_Web_API.Models.Quote", "Quote")
                        .WithMany("Likes")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("ASP_Web_API.Models.TagAssignment", b =>
                {
                    b.HasOne("ASP_Web_API.Models.Quote", "Quote")
                        .WithMany("TagAssignments")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_Web_API.Models.Tag", "Tag")
                        .WithMany("TagAssignments")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ASP_Web_API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ASP_Web_API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_Web_API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ASP_Web_API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP_Web_API.Models.Quote", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("TagAssignments");
                });

            modelBuilder.Entity("ASP_Web_API.Models.Tag", b =>
                {
                    b.Navigation("TagAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
